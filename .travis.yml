# Created with package:mono_repo v2.2.0
language: dart

# Custom configuration
sudo: required
addons:
  chrome: stable
before_install:
  - "export CHROMEDRIVER_BINARY=/usr/bin/google-chrome"
  - "export CHROMEDRIVER_ARGS=--no-sandbox"
  - "/usr/bin/google-chrome --version"
  - "export CHROME_LATEST_VERSION=$(/usr/bin/google-chrome --version | cut -d' ' -f3 | cut -d'.' -f1)"
  - "export CHROME_DRIVER_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_LATEST_VERSION)"
  - "wget https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip"
  - unzip chromedriver_linux64.zip
  - "export PATH=$PATH:$PWD"
after_failure:
  - tool/report_failure.sh
services:
  - xvfb

jobs:
  include:
    - stage: analyzer_and_format
      name: "SDK: 2.5.0; PKGS: dwds, example, webdev; TASKS: `dartanalyzer --fatal-warnings .`"
      dart: "2.5.0"
      env: PKGS="dwds example webdev"
      script: ./tool/travis.sh dartanalyzer_1
    - stage: analyzer_and_format
      name: "SDK: dev; PKGS: dwds, example, webdev; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: dev
      env: PKGS="dwds example webdev"
      script: ./tool/travis.sh dartfmt dartanalyzer_0
    - stage: unit_test
      name: "SDK: 2.5.0; PKG: dwds; TASKS: `pub run test`"
      dart: "2.5.0"
      env: PKGS="dwds"
      script: ./tool/travis.sh test_0
    - stage: unit_test
      name: "SDK: stable; PKG: dwds; TASKS: `pub run test`"
      dart: stable
      env: PKGS="dwds"
      script: ./tool/travis.sh test_0
    - stage: unit_test
      name: "SDK: 2.5.0; PKG: webdev; TASKS: `pub run test -j 1`"
      dart: "2.5.0"
      env: PKGS="webdev"
      script: ./tool/travis.sh test_1
    - stage: unit_test
      name: "SDK: stable; PKG: webdev; TASKS: `pub run test -j 1`"
      dart: stable
      env: PKGS="webdev"
      script: ./tool/travis.sh test_1

stages:
  - analyzer_and_format
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - "$HOME/.pub-cache"
    - example/.dart_tool/build
    - example/.dart_tool/pub
